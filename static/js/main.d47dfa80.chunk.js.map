{"version":3,"sources":["ToDoList/ToDoList.js","Context/Context.js","Context/localStorage.js","ToDoItem/ToDoItem.js","ToDoSearch/ToDoSearch.js","ToDoButton/ToDoButtom.js","model.js","ToDoForm/ToDoForm.js","ToDoCounter/ToDoCounter.js","App/App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","children","TodoContext","React","createContext","TodoProvider","useState","searchvalue","setSearchValue","openModal","setOpenModal","itemName","initialValue","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","saveLocalStorage","searchedTodo","length","filter","todo","todoText","text","toLowerCase","searchvalueLower","includes","Provider","value","deleteTodo","todoIndex","findIndex","newTodos","splice","saveAdd","push","oncompleted","identificador","checked","document","getElementById","index","completed","ToDoItem","useContext","className","id","type","onClick","onDelete","ToDoSearch","onChange","Event","buscador","querySelector","console","log","searchTodo","placeholder","ToDoButton","prevState","Portal","reactDom","createPortal","ToDoForm","newToDoValue","setNewToDoValue","onAdd","event","preventDefault","e","onSubmit","target","ToDoCounter","completados","todos","App","Consumer","Fragment","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d47dfa80.chunk.js","sourcesContent":["import '/home/josue/pruebas/src/ToDoList/ToDoList.css'\nfunction ToDoList(props){\n   return(\n      <section>\n      <ul>\n         {props.children}\n      </ul>\n      </section>\n   )\n}\nexport {ToDoList}","import React from \"react\";\nimport { useLocalStorage } from \"./localStorage\";\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props){\n   const [searchvalue, setSearchValue]= React.useState('');\n   const [openModal, setOpenModal]= React.useState(false);\n   const {item,\n      saveItem: saveLocalStorage,\n      loading,\n      error,}=useLocalStorage('TODOS_V1',[]);\n   let searchedTodo= [];\n \n   (!searchvalue.length>=1)\n   ?searchedTodo=item\n   :searchedTodo = item.filter(\n     todo=>{\n     const todoText =todo.text.toLowerCase();\n     const searchvalueLower= searchvalue.toLowerCase();\n      return todoText.includes(searchvalueLower)\n     })\n   const deleteTodo = (text) => {\n     const todoIndex = item.findIndex(todo => todo.text === text);\n     const newTodos = [...item];\n     newTodos.splice(todoIndex, 1);\n     saveLocalStorage(newTodos);\n   }; \n   const saveAdd = (text) => {\n      const newTodos = [...item];\n      newTodos.push(text);\n      saveLocalStorage(newTodos);\n    }; \n   function oncompleted(identificador) {\n      // si simplemente colocamos let checked = document.querySelector(`#${identificador}`) no consiederarÃ¡ inizilisada la variable checked \n      let checked = document.getElementById(`${identificador}`).checked;\n      const newTodos=[...item] \n      const index= newTodos.findIndex(todo=>todo.text===identificador);\n      (checked)? newTodos[index].completed= true\n      :newTodos[index].completed= false;\n      saveLocalStorage(newTodos)\n   }\n\n   \n   return(\n      <TodoContext.Provider value={{\n            item,\n            loading,\n            error,\n            searchvalue,\n            searchedTodo,\n            deleteTodo,\n            setSearchValue,\n            setOpenModal,\n            openModal,\n            saveAdd,\n            oncompleted,\n      }}>\n         {props.children}\n      </TodoContext.Provider>\n   )\n}\nexport { TodoContext,TodoProvider}","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue){\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch(error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n}\n\nexport {useLocalStorage}","import React from \"react\";\nimport { TodoContext } from \"../Context/Context.js\";\nimport './ToDoItem.css'\nfunction ToDoItem(props) {\n  const {oncompleted}=React.useContext(TodoContext);\n  const identificador=props.text;\n  \n \n  \n  return (\n    <li className='task'>\n      <input id={props.text} checked={props.completed} className='check' type=\"checkbox\" onClick={()=>oncompleted(identificador)}></input>\n      <p id={`${props.text}hola`} className={`${props.completed && 'completed'}`}>{props.text}</p>\n      <span className='delete' onClick={props.onDelete}>X</span>\n    </li>\n  );\n}\n\nexport { ToDoItem };\n\n","import React from \"react\";\nimport './ToDoSearch.css'\nfunction ToDoSearch({setSearchValue}){\n   function searchTodo(Event){\n      const buscador=document.querySelector(`input`).value;\n      console.log(buscador);\n      return setSearchValue(buscador);\n    }\n  \n return (\n   <input className='search' onChange={()=>searchTodo()} placeholder='Encuentra la que te falta hacer' ></input>\n )\n}\nexport {ToDoSearch}","import React from \"react\";\nimport './ToDoButton.css'\n\nfunction ToDoButton(props){\n   const onClick=()=>{\n      /* PRIMERA FORMA\n      (props.openModal)\n      ?props.setOpenModal(false)\n      :props.setOpenModal(true) */\n\n      //uso del prevState\n      props.setOpenModal( prevState=>!prevState)\n   }\n\n   return(\n      <button className='create_button' type='button' onClick={()=>{onClick()}}>\n         +\n      </button>\n   )\n}\nexport {ToDoButton}","import React from \"react\";\nimport reactDom from \"react-dom\";\nimport './modal.css';\nfunction Portal({children}){   \n   return reactDom.createPortal(\n      <div className='ModalBackground'>\n         {children}\n      </div>,\n      document.getElementById('modal')\n   )\n}\nexport {Portal}","import React from \"react\";\nimport { TodoContext } from '/home/josue/pruebas/src/Context/Context.js';\nimport './ToDoForm.css'\n\nfunction ToDoForm(){\n   const {saveAdd,setOpenModal} = React.useContext(TodoContext);\n   const [newToDoValue,setNewToDoValue]= React.useState()\n   const onCancel=()=>{\n      setOpenModal(false)\n   }\n   const onAdd=(event)=>{\n      try{\n         event.preventDefault();\n         setOpenModal(false);\n         saveAdd({text:newToDoValue,completed:false });\n         \n      } catch(e){\n         console.error(e);\n      }\n      \n   }\n   \n   const onchange=(event)=>{\n      setNewToDoValue(event.target.value);\n      console.log(event.target.value);\n   }\n   return(  \n      <form onSubmit={onAdd} className='form'>\n         <label>Escribe tu nuevo to-do</label>\n         <textarea \n         value={newToDoValue} \n         placeholder='cortar la cebolla para el almuerzo'  \n         onChange={onchange}\n         className='form-text'>\n         </textarea>\n         <div className='form-div'>\n            <button type='button' onClick={()=>onCancel()} className='form_buttons'\n            >\n               Cancelar\n            </button>\n            <button type='button' onClick={onAdd} className='form_buttons'>\n               AÃ±adir\n            </button>\n         </div>\n      </form>\n   )\n}\nexport {ToDoForm}","import './ToDoCounter.css'\nimport { TodoContext } from '../Context/Context'\nimport React from 'react'\nfunction ToDoCounter(){\n   const{item}=React.useContext(TodoContext);\n   let completados;\n   completados=item.filter(\n     todo=> todo.completed === true\n   )\n   const todos= item.length\n\n   \n   return(\n   <>\n     <h1 className='first-titule'>\n        What's up <span>ð</span>\n     </h1>\n     <h3 className='second-titule'>Has completado {completados.length} tares de {todos}</h3> \n     </>\n   );\n}\nexport {ToDoCounter}","import { ToDoList } from '../ToDoList/ToDoList';\nimport { ToDoItem } from '../ToDoItem/ToDoItem';\nimport './App.css';\nimport { ToDoSearch } from '../ToDoSearch/ToDoSearch';\nimport { TodoContext } from '../Context/Context';\nimport { TodoProvider } from '../Context/Context';\nimport { ToDoButton } from '../ToDoButton/ToDoButtom';\nimport React from 'react';\nimport { Portal } from '../model';\nimport {ToDoForm} from '../ToDoForm/ToDoForm' \nimport { ToDoCounter } from '../ToDoCounter/ToDoCounter';\n\n\nfunction App() { \n /*   const {\n    lista,\n    searchvalue,\n    setLista,  \n    searchedTodo,\n    deleteTodo,\n    setSearchValue,\n  } =React.useContext(TodoContext);  */\n\n  return ( \n    <TodoProvider>\n      <TodoContext.Consumer>\n          {({item,\n            searchvalue,\n            error,\n            loading,\n            searchedTodo,\n            deleteTodo,\n            setSearchValue,\n            openModal,\n            setOpenModal,})=>(\n      <React.Fragment  >\n        <ToDoCounter />\n        <ToDoSearch     setSearchValue={setSearchValue }/>\n            <ToDoList>\n            {error && <p>DesespÃ©rate, hubo un error...</p>}\n            {loading && <p>Estamos cargando, no desesperes...</p>}\n            {(!loading && !searchedTodo.length) && <p>Â¡Crea tu primer TODO!</p>}\n\n            {searchedTodo.map((todo)=>   \n              <ToDoItem \n              key={todo.text} \n              text={todo.text}\n              completed={todo.completed} \n              onDelete={()=>deleteTodo(todo.text)} \n              />\n            )}\n            </ToDoList>\n        {\n          openModal && (\n          <Portal>\n            <ToDoForm setOpenModal={setOpenModal}/>\n          </Portal>)\n        }\n          <ToDoButton setOpenModal={setOpenModal} openModal={openModal}></ToDoButton>\n        </React.Fragment>\n        )}\n      </TodoContext.Consumer>\n    </TodoProvider>\n  );   \n } \n \nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}